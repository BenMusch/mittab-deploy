web:
  restart: "no"
  build: .
  dockerfile: Dockerfile.web
  ports:
    - "8000:8000"
  volumes:
    - ./:/usr/src/app
    - ${HOME}/.ssh:/root/.ssh
  env_file:
    - .env
    - .env.secret
  environment:
    - PYTHONPATH=/usr/src/app
    - FLASK_APP=/usr/src/app/deployer/__init__.py
  command: ./bin/start_web

celery:
  build: .
  dockerfile: Dockerfile.web
  volumes:
    - ./:/usr/src/app
    - ${HOME}/.ssh:/root/.ssh
  env_file:
    - .env
    - .env.secret
  environment:
    - PYTHONPATH=/usr/src/app
    - FLASK_APP=/usr/src/app/deployer/__init__.py
  command: celery -A deployer.tasks.celery worker --loglevel=debug

nginx:
  restart: always
  build: .
  dockerfile: Dockerfile.nginx
  ports:
    - "80:80"
    - "443:443"
  volumes:
    - /www/static
    - ./data/certbot/conf:/etc/letsencrypt
    - ./data/certbot/www:/var/www/certbot
  volumes_from:
    - web
  links:
    - web:web

certbot:
  image: certbot/certbot
  entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  volumes:
    - ./data/certbot/conf:/etc/letsencrypt
    - ./data/certbot/www:/var/www/certbot

